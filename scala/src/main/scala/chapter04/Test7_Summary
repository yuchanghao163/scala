Scala面向对象总结：
    封装：Scala中也有public，private，protected和默认。但是不推荐使用，
         它通过注解@BeanProperty 来实现属性的get 和set方法
    继承：子类继承父类的属性和方法。单继承多特质
          特殊的是当继承抽象类时，对应抽象方法和属性和非抽象方法和属性，它都可以重写。而Java中没有重写属性的概念。
          并且Scala中用extends实现特质且实现多特质时用with连接
    多态：Scala中的多态和Java区别是：当子类重写了父类的属性和方法时，他会调用重写后的属性和方法

Java面向对象总结：
    封装：它通过四种权限修饰符，以及get和set方法规定对一个类的成员的访问权限以及调用情况
    继承：子类继承父类的属性和方法。单继承多实现
    多态：父类的引用指向子类的对象。如果父类和子类有同名的方法，且子类重写后，父类的对象调用该方法时
          实际上调用的是子类同名的方法。同时属性不存在多态特性

